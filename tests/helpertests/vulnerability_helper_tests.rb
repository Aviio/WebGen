require 'minitest/autorun'
require 'hash_validator'
require_relative '../../lib/helpers/vulnerability_helper'

class Vulnerability_Helper_Tests < Minitest::Test
  def setup
    #arrange
    @sut = VulnerabilityHelper.new
    @vulnerability_ids = Array[1, 2, 3]
    @vulnerabilities_hash = Hash.new

    @vulnerabilities_hash.store(1, {    type: 'test1',
                                        level:'1',
                                        description: 'A test vuln1',
                                        location: 'a/test/location1'
                                 })

    @vulnerabilities_hash.store(2, {    type: 'test2',
                                        level:'2',
                                        description: 'A test vuln2',
                                        location: 'a/test/location2'
    })

    @vulnerabilities_hash.store(3, {    type: 'test3',
                                        level:'3',
                                        description: 'A test vuln3',
                                        location: 'a/test/location3'
    })

    @validations = {
                      type: 'string',
                      level: 'string',
                      description: 'string',
                      location: 'string'
    }
  end

  def test_given_i_select_2_vulnerabilities_should_return_2_vulnerabilities
    #act
    result = @sut.create_vulnerability_array(2, @vulnerability_ids, @vulnerabilities_hash)
    #assert
    assert(result.is_a?(Array), msg='the result is not an array')
    #assert(HashValidator.validate(result, validations))
    assert_equal(result.count, 2, msg='the result is not equal to 2')


  end
end